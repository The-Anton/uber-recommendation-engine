<meta charset="UTF-8" />
<title>Uber</title>

<script>
  var map = null;
  var boxpolys = null;
  var directions = null;
  var routeBoxer = null;
  var distance = null; // km
  var service = null;
  var gmarkers = [];
  var boxes = null;
  var latitude = null;
  var longitude = null;
  var infowindow = new google.maps.InfoWindow();

  // check for Geolocation support
  if (navigator.geolocation) {
    console.log("Geolocation is supported!");
  } else {
    console.log("Geolocation is not supported for this Browser/OS.");
  }

  window.onload = function () {
    showRecommendationCard();

    var startPos;
    var geoOptions = {
      enableHighAccuracy: true,
    };
    var geoSuccess = function (position) {
      startPos = position;
      latitude = startPos.coords.latitude;
      longitude = startPos.coords.longitude;
      google.maps.event.addDomListener(
        window,
        "load",
        initialize(latitude, longitude)
      );
    };
    var geoError = function (error) {
      console.log("Error occurred. Error code: " + error.code);
    };

    navigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);
  };

  function showRecommendationCard() {
    $(function () {
      $("#recommendPlacesButton").trigger("click");
    });
  }

  function initialize(latitude, longitude) {

    var mapOptions = {
      center: new google.maps.LatLng(latitude, longitude),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoom: 16,
      disableDefaultUI: true,
    };

    map = new google.maps.Map(document.getElementById("map"), mapOptions);
    service = new google.maps.places.PlacesService(map);

    routeBoxer = new RouteBoxer();

    directionService = new google.maps.DirectionsService();
    directionsRenderer = new google.maps.DirectionsRenderer({
      map: map,
      polylineOptions: {
        strokeColor: "black",
        strokeWeight: 4,
      },
    });

    let mapStyles = [
      {
        featureType: "administrative",
        elementType: "geometry",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "administrative.land_parcel",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "administrative.neighborhood",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "poi",
        elementType: "labels.text",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road",
        elementType: "labels",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "road",
        elementType: "labels.icon",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "transit",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
      {
        featureType: "water",
        elementType: "labels.text",
        stylers: [
          {
            visibility: "off",
          },
        ],
      },
    ];


    var latLng = { lat: latitude, lng: longitude };
    var marker = new google.maps.Marker({
      position: latLng,
      map: map,
      icon: {
        path: google.maps.SymbolPath.CIRCLE,
        scale: 10,
        fillOpacity: 1,
        strokeWeight: 2,
        fillColor: "#5384ED",
        strokeColor: "#ffffff",
      },
    });
  }

  function findPlaces(searchIndex) {
    var type = "tourist"; //document.getElementById('type').value;
    var keyword = "visit"; //document.getElementById('keyword').value;
    var name = ""; //document.getElementById('name').value;
    var request = {
      bounds: boxes[searchIndex],
    };
    if (!!type && type != "") {
      if (type.indexOf(",") > 0) request.types = type.split(",");
      else request.types = [type];
    }
    if (!!keyword && keyword != "") request.keyword = keyword;
    if (!!name && name != "") request.name = name;
    service.nearbySearch(request, function (results, status) {
      if (status == google.maps.places.PlacesServiceStatus.OK) {
        //document.getElementById('recommendation_area').innerHTML += "bounds[" + searchIndex + "] returns " + results.length + " results<br>"
        for (var i = 0, result; (result = results[i]); i++) {
          let typesArray = result.types;
          console.log(typesArray);
          if (typesArray.includes("tourist_attraction")) {
            var marker = createMarker(result);
          }
        }
      } else {
        document.getElementById("recommendation_area").innerHTML +=
          "bounds[" +
          searchIndex +
          "] returns 0 results<br>&nbsp;status=" +
          status +
          "<br>";
      }
      if (status != google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT) {
        searchIndex++;
        if (searchIndex < boxes.length) findPlaces(searchIndex);
      } else {
        // delay 1 second and try again
        setTimeout("findPlaces(" + searchIndex + ")", 1000);
      }
    });
  }

  function createMarker(place) {
    var placeLoc = place.geometry.location;
    if (place.icon) {
      var image = new google.maps.MarkerImage(
        place.icon,
        new google.maps.Size(71, 71),
        new google.maps.Point(0, 0),
        new google.maps.Point(17, 34),
        new google.maps.Size(25, 25)
      );
    } else
      var image = {
        url: "https://maps.gstatic.com/intl/en_us/mapfiles/markers2/measle.png",
        size: new google.maps.Size(7, 7),
        anchor: new google.maps.Point(3.5, 3.5),
      };

    var marker = new google.maps.Marker({
      map: map,
      icon: image,
      position: place.geometry.location,
    });
    var request = {
      reference: place.reference,
    };
    google.maps.event.addListener(marker, "click", function () {
      service.getDetails(request, function (place, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
          var contentStr =
            "<h5>" + place.name + "</h5><p>" + place.formatted_address;
          if (!!place.formatted_phone_number)
            contentStr += "<br>" + place.formatted_phone_number;
          if (!!place.website)
            contentStr +=
              '<br><a target="_blank" href="' +
              place.website +
              '">' +
              place.website +
              "</a>";
          contentStr += "<br>" + place.types + "</p>";
          infowindow.setContent(contentStr);
          infowindow.open(map, marker);
        } else {
          var contentStr = "<h5>No Result, status=" + status + "</h5>";
          infowindow.setContent(contentStr);
          infowindow.open(map, marker);
        }
      });
    });
    gmarkers.push(marker);
    if (!place.name) place.name = "result " + gmarkers.length;

    renderRecommendations(gmarkers, place);
  }

  function getCurrentLocationRecommendation(){
    getRecommendationForLocation(null, latitude, longitude, 1500)
                      .then((result)=> {
                        document.getElementById("recommendation_area").innerHTML = "";
                        renderSuggestions(result);
                      })
                      .catch((err)=>{
                        console.log(err);
                      })
    document.getElementById("recommendation_area").innerHTML = `<iframe class="mt-16 ml-auto mr-auto" src="https://embed.lottiefiles.com/animation/53512"></iframe>`;

  }
  function renderSuggestions(result){
    document.getElementById("recommendation_area").innerHTML = "";
    let places = result[0];
    let multipleType = result[1];
    let foodPlaces = [];
    let moviePlaces = [];
    let travelPlaces = [];
    let categories = ['establishment', 'movie_theater', 'tourist_attraction']

    let countFlag = 0;
    for (var i = 0; i < places.length; i++) {
      let place = places[i];
      let typesArray = places[i].types;

      if (typesArray.includes(categories[0]) || typesArray.includes("food")) foodPlaces.push(place);
      if (typesArray.includes(categories[1])) moviePlaces.push(place);
      if (typesArray.includes(categories[2])) travelPlaces.push(place);

    }

    if(foodPlaces.length) renderFood(foodPlaces);
    if(moviePlaces.length) renderMovies(moviePlaces);
    if(travelPlaces.length) renderTravel(travelPlaces);

    //if(!countFlag) document.getElementById("recommendation_area").innerHTML = `<p class="m-5 mt-16 text-2xl">Currently no suggestions.</p>`;

  }

  function renderFood(places){
    let activity = getCurrentAction();
    let content = "";
    activity = activity.split('-')[1];

    if(activity == "morning"){
      activity = "Breakfast";
    }else if(activity == "afternoon"){
      activity = "Lunch";
    }else if(activity == "evening"){
      activity = "Snacks";
    }else if(activity == "night"){
      activity = "Dinner";
    }
    let outerCard = `<div class="flex items-center justify-center bg-purple-50 bg-opacity-0 ">
                                    <div class="flex flex-col h-full">
                                        <div class="w-full pl-2 pr-2">
                                            <div class="flex items-center justify-between flex-1 h-full px-4 py-2 rounded-xl bg-purple-50">
                                                <p class="text-lg font-heavy text-red-400">${activity}</p>
                                            </div>
                                        </div>`;
                                   
    

    for(var i=0; i<places.length; i++){
      content += getCardContent(places[i], 'restaurant');
    }

    outerCard  = outerCard + content + `</div> <div>`;
    document.getElementById('recommendation_area').innerHTML += outerCard;
  }

  function renderMovies(places){
    let content = "";
    let outerCard = `<div class="flex items-center justify-center bg-purple-50 bg-opacity-0 ">
                                    <div class="flex flex-col h-full">
                                        <div class="w-full pl-2 pr-2">
                                            <div class="flex items-center justify-between flex-1 h-full px-4 py-2 rounded-xl bg-purple-50">
                                                <p class="text-lg font-heavy text-red-400">Theater</p>
                                            </div>
                                        </div>`;
                                   
    

    for(var i=0; i<places.length; i++){
      content += getCardContent(places[i], 'movie_theater');
    }

    outerCard  = outerCard + content + `</div> <div>`;
    document.getElementById('recommendation_area').innerHTML += outerCard;
  }

  function renderTravel(places){
    let content = "";
    let outerCard = `<div class="flex items-center justify-center bg-purple-50 bg-opacity-0 ">
                                    <div class="flex flex-col h-full">
                                        <div class="w-full pl-2 pr-2">
                                            <div class="flex items-center justify-between flex-1 h-full px-4 py-2 rounded-xl bg-purple-50">
                                                <p class="text-lg font-heavy text-red-400">Travel</p>
                                            </div>
                                        </div>`;
                                   
    

    for(var i=0; i<places.length; i++){
      content += getCardContent(places[i], 'tourist_attratction');
    }

    outerCard  = outerCard + content + `</div> <div>`;
    document.getElementById('recommendation_area').innerHTML += outerCard;
  }

  function getCardContent(place, type) {
            let placeImageURL = null;
            let uberEatsTags = `<div class="ribbon ribbon-top-left"><span>Uber Eats</span></div>`;
            let imageArray = ["https://images.thrillophilia.com/image/upload/s--XcozMrbO--/c_fill,g_auto,h_600,q_auto,w_975/f_auto,fl_strip_profile/v1/images/photos/000/178/583/original/1573565509_cover.jpg.jpg",
                              "https://www.sundayguardianlive.com/wp-content/uploads/2020/07/3-Dib-restaurant-losses-edited.jpg",
                              "https://static.toiimg.com/thumb/68007187/garden.jpg?width=1200&height=900",
                              "https://images.unsplash.com/photo-1524443169398-9aa1ceab67d5?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8dGVtcGxlfGVufDB8fDB8fA%3D%3D&w=1000&q=80"]
            let starsRatingHTML = " ";
            let rating = (place.rating == undefined)? (0): place.rating;

            if(type == "restaurant"){
              placeImageURL = imageArray[1];
            }else if(type == "tourist_attraction"){
              placeImageURL = imageArray[0];
              uberEatsTags = ``;
            }else if(type == "hindu_temple"){
              placeImageURL = imageArray[3];
              uberEatsTags = ``;
            }else if(type == "park"){
              placeImageURL = imageArray[2];
              uberEatsTags = ``;
            }else {
              placeImageURL = imageArray[0];
              uberEatsTags = ``;
            }

            for(let j=1; j<=place.rating; j++){
              starsRatingHTML += `<span class="fa fa-star checked"></span>`;
            }


            var recommendation_area_html = `<div class="place-card relative flex flex-col bg-white-200 mt-5 mb-5 ml-auto mr-auto p-2 shadow border rounded-2xl border-gray-100 shadow-lg" style="width: 360px;">
                                          <div class="flex">    
                                            <div class="w-2/5 m-auto">
                                                    <img class="rounded-2xl" src="${placeImageURL}" style="width: 120px; height: 120px;"></img>
                                                </div >
                                                <div class="flex flex-col">
                                                  <div class="flex w-full h-42">
                                                      <div class="flex flex-col w-11/12 mt-2 h-42" >
                                                          <p class="w-full font-bold text-xs text-gray-900 pl-2 pr-5 ">${place.name}</p>
                                                          <div class="flex flex-col pl-2 pr-5 ">
                                                              <div class="flex mt-2">
                                                                  <p class="text-gray-500 mr-3">${rating}</p>
                                                                  <div>`
                                                                      + starsRatingHTML +
                                                                  `</div>
                                                                  
                                                              </div>
                                                              <div class="flex w-full">
                                                                  <div class="mt-3 mb-2 text-center rounded-3xl text-xs text-white bg-green-500 px-4 py-1">
                                                                      Opened
                                                                  </div>
                                                              </div>
                                                              
                                                          </div>
                                                      </div>
                              
                                                      <div class="pt-2">
                                                          <div class="form-check">
                                                            <input class="form-check-input appearance-none h-4 w-4 border border-black rounded-sm bg-white checked:bg-black checked:border-black focus:outline-none transition duration-200 mt-1 align-top bg-no-repeat bg-center bg-contain float-left mr-2 cursor-pointer" type="checkbox" onclick="togglePlaceCheckbox(this)" value="${place.name}" id="${place.place_id}">                        
                                                          </div>
                                                        </div>
                                                  </div>
  
                                                  <div class="flex w-full ml-2">
                                                      <button class="bg-black text-xs px-2 py-2 text-white px-2 font-regular rounded-3xl border  shadow">
                                                        ₹125 Book Ride
                                                        </button>
              
                                                        <button id="${place.place_id}-button" value="${place.name}" onclick="knowMorePage()" class="text-xs bg-black px-2  py-2 ml-2 text-white rounded-3xl font-regular shadow">
                                                          Know More
                                                      </button>
                                                  </div>
                                                </div>`
                                                + uberEatsTags + `</div> 
                                                <div id="${place.place_id}footer" class=" text-lg font-bold m-2 ml-auto mr-auto"></div>
                                                </div>`;

            // document.getElementById("recommendation_area").innerHTML +=
            //   recommendation_area_html;

            return recommendation_area_html
          }
  
</script>

<script>
  let selectedPlaces = [];
  function knowMorePage(element){
            let id = element.id;
            let name = element.value;

            console.log(id)
            let url = new URL(window.location.origin + `/desktop/details?placeid=${id}&name=${name}`);
            //window.open(url, "_self");
  }

  function togglePlaceCheckbox(element) {
    if (
      element.checked &&
      !(selectedPlaces.filter((place) => place.place_id == element.id) > 0)
    ) {
      addPlaceToQueue(element.value, element.id);
    }
  }

  function addPlaceToQueue(name, id) {
    let placeObject = {
      name: name,
      place_id: id,
    };
    selectedPlaces.push(placeObject);
  }

  function getCurrentRecommendation(latitude, longitude) {}
</script>


