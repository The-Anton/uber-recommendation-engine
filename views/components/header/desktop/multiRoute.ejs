<meta charset="UTF-8" />
<title>Uber</title>

<script>
  $(document).ready(function () {
    $(".slider-card").click(function () {
      $(".card-body").toggleClass("transition");
    });
  });
</script>

<script>
  var map = null;
  var boxpolys = null;
  var directions = null;
  var routeBoxer = null;
  var distance = null; // km
  var service = null;
  var gmarkers = [];
  var boxes = null;
  var infowindow = new google.maps.InfoWindow();
  var route = [];
  const waypts = [];
  var selectedPlaces = [];

  var mapStyles = [
    {
      featureType: "administrative",
      elementType: "geometry",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "administrative.land_parcel",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "administrative.neighborhood",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "poi",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "poi",
      elementType: "labels.text",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "road",
      elementType: "labels",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "road",
      elementType: "labels.icon",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "transit",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
    {
      featureType: "water",
      elementType: "labels.text",
      stylers: [
        {
          visibility: "off",
        },
      ],
    },
  ];

  var SUMMARY_PANEL_CARD = null;

  window.onload = function () {
    // check for Geolocation support
    if (navigator.geolocation) {
      console.log("Geolocation is supported!");

      const queryParams = window.location.search;
      let urlParams = new URLSearchParams(queryParams);
      let origin = "Army institute of technology"; //urlParams.get("origin");
      let destination = "Army institute of technology"; //urlParams.get("destination");

      
      var placesString = '<%- places %>';
      placesString = placesString.slice(1,-1);
      var place = placesString.split('|')
                        .map((place)=>{
                            let placeName = place.split('^')[0];
                            let placeId = place.split('^')[1];

                            return {"name": placeName, "place_id": placeId}
                          })

      console.log(place);
      selectedPlaces = place;

      for (let i = 0; i < selectedPlaces.length; i++) {
        console.log(selectedPlaces[i].name)
        waypts.push({
          location: { placeId: selectedPlaces[i].place_id },
          stopover: true,
        });
      }
      var startPos;
      var geoOptions = {
        enableHighAccuracy: true,
      };
      var geoSuccess = function (position) {
        startPos = position;
        latitude = startPos.coords.latitude;
        longitude = startPos.coords.longitude;
        google.maps.event.addDomListener(
          window,
          "load",
          initialize(latitude, longitude, origin, destination)
        );
      };
      var geoError = function (error) {
        console.log("Error occurred. Error code: " + error.code);
      };

      navigator.geolocation.getCurrentPosition(
        geoSuccess,
        geoError,
        geoOptions
      );
    } else {
      console.log("Geolocation is not supported for this Browser/OS.");
    }
  };

  function initialize(latitude, longitude, origin, destination) {
    // Default the map view to the continental U.S.
    var mapOptions = {
      center: new google.maps.LatLng(latitude, longitude),
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoom: 12,
      disableDefaultUI: true
    };

    map = new google.maps.Map(document.getElementById("map"), mapOptions);
    service = new google.maps.places.PlacesService(map);

    directionService = new google.maps.DirectionsService();

    var rendererOptions = {
      map: map,
      suppressMarkers: false,
      polylineOptions: {
        strokeColor: "black",
        strokeWeight: 5,
      },
    };

    let multiRouteDirectionRenderer = new google.maps.DirectionsRenderer(
      rendererOptions
    );

    multiRouteDirectionRenderer.setMap(map);


    calculateAndDisplayRoute(
      origin,
      destination,
      directionService,
      multiRouteDirectionRenderer
    );
  }

  function calculateAndDisplayRoute(
    startLocation,
    endLocation,
    directionsService,
    multiRouteDirectionRenderer
  ) {
    directionsService
      .route({
        origin: startLocation,
        destination: endLocation,
        waypoints: waypts,
        optimizeWaypoints: true,
        travelMode: google.maps.TravelMode.DRIVING,
      })
      .then((response) => {
        multiRouteDirectionRenderer.setDirections(response);

        route = response.routes[0];
        const summaryPanel = document.getElementById("recommendation_area");
        summaryPanel.innerHTML = "";

        let orderedPlaceName = [];
        orderedPlaceName.push(startLocation);

        for (let i = 0; i < route.waypoint_order.length; i++) {
          orderedPlaceName.push(selectedPlaces[route.waypoint_order[i]].name);
        }
        orderedPlaceName.push(endLocation);

        // For each route, display summary information.
        for (let i = 0; i < route.legs.length; i++) {
          const routeSegment = i + 1;
          let cardHTML = `<div class="route-card bg-white-200" style="width: 356px;">
                        <div class="flex  ml-10 items-center justify-center flex-1 p-6 bg-purple-50 bg-opacity-0 border rounded-3xl border-gray-100 shadow-xl">
                            <div class="flex  ml-auto mr-auto flex-col w-full space-y-4 h-full">
                                <div class="w-full">
                                    <div class="flex items-center justify-between flex-1 h-full px-6 py-6 bg-purple-50 rounded-3xl">
                                        <p class="text-lg font-medium text-indigo-600">${
                                          route.legs[i].distance.text
                                        }</p>
                                        <p class="text-lg font-heavy text-red-400">${
                                          route.legs[i].duration.text
                                        }</p>
                                    </div>
                                </div>
                                <div class="m-5 flex flex-col items-start justify-end w-full">
                                    <div class="flex">
                                        
                                        <div class="m-auto w-5 h-5 bg-white border-2 rounded-full border-red-400"></div>

                                        <div class="mt-2 ml-5 mr-5 flex flex-col space-y-0.5 justify-end ">
                                            <p class="text-xs font-medium text-gray-400">Pickup location</p>
                                            <p class="text-sm font-medium text-gray-800">${
                                              orderedPlaceName[i]
                                            }</p>
                                        </div>
                                    </div>
                                    <div class="border-2-2 relative border-dashed border-blue-500 h-4 border" style="top: 24.5%; left: 1.5%;"></div>

                                    <div class="flex">
                                        <img class="m-auto w-5" src="https://img.icons8.com/color/64/000000/marker--v1.png"/>  
                                        <div class="mb-2 ml-5 mr-5 flex flex-col justify-end">
                                            <p class="text-xs font-medium text-gray-400">Drop off</p>
                                            <p class="text-sm font-medium text-gray-800">${
                                              orderedPlaceName[i + 1]
                                            }</p>
                                        </div>
                                    </div>
                                    
                                    <!--
                                    <div class="w-5 h-1/5 bg-red-400 rounded-lg"></div>
                                    <div class="w-5 h-1/5 bg-white border-2 rounded-full border-red-400"></div>
                                    <div class="transform -rotate-90 w-14 h-0.5 border-gray-200"></div>
                                    -->
                                </div>
                            </div>
                        </div>
                    </div>`

          if(i != route.legs.length-1){
            cardHTML = cardHTML + `<div class="vertical-line w-6/12 ml-auto mr-auto"></div>`;
          }

          summaryPanel.innerHTML += cardHTML;

        }
      })
      .catch((e) =>
        window.alert("Directions request failed due to " + e + status)
      );
  }
</script>


